# Distributed under the terms of the GNU General Public License v2

EAPI=7
inherit cmake llvm toolchain-funcs

# check this on updates
LLVM_MAX_SLOT=12

DESCRIPTION="Advanced shading language for production GI renderers"
HOMEPAGE="http://opensource.imageworks.com/?p=osl"
SRC_URI="{{artifacts[0].src_uri}}"

LICENSE="BSD"
SLOT="0/$(ver_cut 2)"
KEYWORDS="*"

X86_CPU_FEATURES=(
	sse2:sse2 sse3:sse3 ssse3:ssse3 sse4_1:sse4.1 sse4_2:sse4.2
	avx:avx avx2:avx2 avx512f:avx512f f16c:f16c
)
CPU_FEATURES=( ${X86_CPU_FEATURES[@]/#/cpu_flags_x86_} )

IUSE="doc partio qt5 ${CPU_FEATURES[@]%:*}"

RDEPEND="
	dev-libs/boost:=
	dev-libs/pugixml
	media-libs/openexr:=
	media-libs/openimageio:=
	<=sys-devel/clang-13:=
	sys-libs/zlib:=
	dev-python/pybind11
	partio? ( media-libs/partio )
	qt5? (
		dev-qt/qtcore:5
		dev-qt/qtgui:5
		dev-qt/qtwidgets:5
	)
"

DEPEND="${RDEPEND}"
BDEPEND="
	sys-devel/bison
	sys-devel/flex
	virtual/pkgconfig
"

# Restricting tests as Make file handles them differently
RESTRICT="test"

S="${WORKDIR}/OpenShadingLanguage-Release-${PV}"

llvm_check_deps() {
	has_version -r "sys-devel/clang:${LLVM_SLOT}"
}

src_unpack() {
	default
	rm -rf "${S}"
	mv "${WORKDIR}"/{{github_user}}-{{github_repo}}-* "${S}" || die
}

src_prepare(){
	sed -i -e '/osl_add_all_tests/d' CMakeLists.txt || die
	if has_version media-libs/openexr:3 ; then
		sed -i -e 's#Imath/#Imath-3/#g' src/liboslquery/py_osl.h src/include/OSL/oslconfig.h.in || die
		sed -i -e 's#OpenEXR/#OpenEXR-3/#g' src/cmake/modules/FindOpenEXR.cmake \
			src/liboslexec/shadingsys.cpp src/include/OSL/Imathx/*.h || die
	fi
	cmake_src_prepare
}

src_configure() {
	local cpufeature
	local mysimd=()
	for cpufeature in "${CPU_FEATURES[@]}"; do
		use "${cpufeature%:*}" && mysimd+=("${cpufeature#*:}")
	done

	# If no CPU SIMDs were used, completely disable them
	[[ -z ${mysimd} ]] && mysimd=("0")

	local gcc=$(tc-getCC)
	# LLVM needs CPP11. Do not disable.
	local mycmakeargs=(
		-DCMAKE_CXX_STANDARD=14
		-DCMAKE_INSTALL_DOCDIR="share/doc/${PF}"
		-DINSTALL_DOCS=$(usex doc)
		-DLLVM_STATIC=OFF
		-DOSL_BUILD_TESTS=OFF
		-DSTOP_ON_WARNING=OFF
		-DUSE_PARTIO=$(usex partio)
		-DUSE_QT=$(usex qt5)
		-DUSE_SIMD="$(IFS=","; echo "${mysimd[*]}")"
	)

	cmake_src_configure
}
